{"ast":null,"code":"var _jsxFileName = \"/Users/aikenmanasbekov/neobis_front_toDoListReact/neobis-front-todolist-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/style.css';\nimport EditableName from './EditableName';\nimport CategoryCheckbox from './CategoryCheckbox';\nimport TaskInput from './TaskInput';\nimport TaskList from './TaskList';\nimport AddButton from './AddButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('business');\n  const [taskText, setTaskText] = useState('');\n  const handleCategoryChange = category => {\n    setSelectedCategory(category === selectedCategory ? '' : category);\n  };\n  const handleAddTask = newTaskText => {\n    if (taskText.trim() !== '') {\n      const newTask = {\n        text: newTaskText,\n        category: selectedCategory,\n        checked: false\n      };\n      setTasks([...tasks, newTask]);\n      const newEditButtonTexts = [...editButtonTexts, 'Edit'];\n      setTaskText('');\n    }\n  };\n  const handleComplete = index => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = !newTasks[index].completed;\n    setTasks(newTasks);\n  };\n  const handleDelete = index => {\n    const updatedTasks = tasks.filter((_, i) => i !== index);\n    setTasks(updatedTasks);\n  };\n  const handleEdit = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].isEditing = !updatedTasks[index].isEditing;\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"name\",\n      children: [\"What's up, \", /*#__PURE__*/_jsxDEV(EditableName, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"CREATE A TODO\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"What's on your todo list?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      taskText: taskText,\n      onInputChange: event => setTaskText(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Pick a category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryCheckbox, {\n      selectedCategory: selectedCategory,\n      onCategoryChange: handleCategoryChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n      onClick: () => handleAddTask(taskText)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onDelete: handleDelete,\n      onEdit: handleEdit,\n      onComplete: handleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Plh3bqdN12q11cL1LHI+4a+oo1o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","EditableName","CategoryCheckbox","TaskInput","TaskList","AddButton","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","selectedCategory","setSelectedCategory","taskText","setTaskText","handleCategoryChange","category","handleAddTask","newTaskText","trim","newTask","text","checked","newEditButtonTexts","editButtonTexts","handleComplete","index","newTasks","completed","handleDelete","updatedTasks","filter","_","i","handleEdit","isEditing","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onInputChange","event","target","value","onCategoryChange","onClick","onDelete","onEdit","onComplete","_c","$RefreshReg$"],"sources":["/Users/aikenmanasbekov/neobis_front_toDoListReact/neobis-front-todolist-react/src/components/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/style.css';\nimport EditableName from './EditableName';\nimport CategoryCheckbox from './CategoryCheckbox';\nimport TaskInput from './TaskInput';\nimport TaskList from './TaskList';\nimport AddButton from './AddButton';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('business');\n  const [taskText, setTaskText] = useState('');\n\n  const handleCategoryChange = (category) => {\n    setSelectedCategory(category === selectedCategory ? '' : category);\n  };\n\n  const handleAddTask = (newTaskText) => {\n    if (taskText.trim() !== '') {\n    const newTask = {\n      text: newTaskText,\n      category: selectedCategory,\n      checked: false,\n    };\n    setTasks([...tasks, newTask]);\n    const newEditButtonTexts = [...editButtonTexts, 'Edit'];\n    setTaskText(''); \n  }\n  };\n\n  const handleComplete = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = !newTasks[index].completed;\n    setTasks(newTasks);\n  };\n\n  const handleDelete = (index) => {\n    const updatedTasks = tasks.filter((_, i) => i !== index);\n    setTasks(updatedTasks);\n  };\n\n  const handleEdit = (index) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].isEditing = !updatedTasks[index].isEditing;\n    setTasks(updatedTasks);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"name\">\n        What's up, <EditableName />\n      </h1>\n      <h4>CREATE A TODO</h4>\n      <h5>What's on your todo list?</h5>\n      <TaskInput\n        taskText={taskText}\n        onInputChange={(event) => setTaskText(event.target.value)} \n      />\n      <h5>Pick a category</h5>\n      <CategoryCheckbox \n        selectedCategory={selectedCategory} \n        onCategoryChange={handleCategoryChange} \n      />\n      <AddButton \n        onClick={() => handleAddTask(taskText)} \n      />\n      <h4>TODO LIST</h4>\n      <TaskList \n        tasks={tasks} \n        onDelete={handleDelete} \n        onEdit={handleEdit} \n        onComplete={handleComplete} \n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}