{"ast":null,"code":"var _jsxFileName = \"/Users/aikenmanasbekov/neobis_front_toDoListReact/neobis-front-todolist-react/src/components/EditableName.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditableName() {\n  _s();\n  const [isPlaceholder, setIsPlaceholder] = useState(true);\n  const inputRef = useRef(null);\n  const handleFocus = () => {\n    if (isPlaceholder) {\n      setIsPlaceholder(false);\n      inputRef.current.textContent = ''; // Clear the text\n      inputRef.current.focus(); // Set focus\n    }\n  };\n\n  const handleBlur = () => {\n    if (inputRef.current.textContent.trim() === '') {\n      setIsPlaceholder(true);\n      inputRef.current.textContent = 'Your name'; // Restore placeholder\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `name ${isPlaceholder ? 'placeholder' : ''}`,\n    contentEditable: \"true\",\n    id: \"editableName\",\n    ref: inputRef,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    children: isPlaceholder ? 'Your name' : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(EditableName, \"jMVkFdYKCyvSgHFRkllnsNUjZ+4=\");\n_c = EditableName;\nexport default EditableName;\nvar _c;\n$RefreshReg$(_c, \"EditableName\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","EditableName","_s","isPlaceholder","setIsPlaceholder","inputRef","handleFocus","current","textContent","focus","handleBlur","trim","className","contentEditable","id","ref","onFocus","onBlur","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aikenmanasbekov/neobis_front_toDoListReact/neobis-front-todolist-react/src/components/EditableName.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nfunction EditableName() {\n  const [isPlaceholder, setIsPlaceholder] = useState(true);\n  const inputRef = useRef(null);\n\n  const handleFocus = () => {\n    if (isPlaceholder) {\n      setIsPlaceholder(false);\n      inputRef.current.textContent = ''; // Clear the text\n      inputRef.current.focus(); // Set focus\n    }\n  };\n\n  const handleBlur = () => {\n    if (inputRef.current.textContent.trim() === '') {\n      setIsPlaceholder(true);\n      inputRef.current.textContent = 'Your name'; // Restore placeholder\n    }\n  };\n\n  return (\n    <span\n      className={`name ${isPlaceholder ? 'placeholder' : ''}`}\n      contentEditable=\"true\"\n      id=\"editableName\"\n      ref={inputRef}\n      onFocus={handleFocus}\n      onBlur={handleBlur}\n    >\n      {isPlaceholder ? 'Your name' : ''}\n    </span>\n  );\n}\n\nexport default EditableName;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMQ,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIH,aAAa,EAAE;MACjBC,gBAAgB,CAAC,KAAK,CAAC;MACvBC,QAAQ,CAACE,OAAO,CAACC,WAAW,GAAG,EAAE,CAAC,CAAC;MACnCH,QAAQ,CAACE,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC;;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIL,QAAQ,CAACE,OAAO,CAACC,WAAW,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC9CP,gBAAgB,CAAC,IAAI,CAAC;MACtBC,QAAQ,CAACE,OAAO,CAACC,WAAW,GAAG,WAAW,CAAC,CAAC;IAC9C;EACF,CAAC;;EAED,oBACER,OAAA;IACEY,SAAS,EAAG,QAAOT,aAAa,GAAG,aAAa,GAAG,EAAG,EAAE;IACxDU,eAAe,EAAC,MAAM;IACtBC,EAAE,EAAC,cAAc;IACjBC,GAAG,EAAEV,QAAS;IACdW,OAAO,EAAEV,WAAY;IACrBW,MAAM,EAAEP,UAAW;IAAAQ,QAAA,EAElBf,aAAa,GAAG,WAAW,GAAG;EAAE;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEX;AAACpB,EAAA,CA/BQD,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAiCrB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}