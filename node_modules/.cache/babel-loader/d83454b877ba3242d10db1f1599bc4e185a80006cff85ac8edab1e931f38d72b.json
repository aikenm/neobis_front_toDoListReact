{"ast":null,"code":"var _jsxFileName = \"/Users/aikenmanasbekov/neobis_front_toDoListReact/neobis-front-todolist-react/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  tasks,\n  onDelete,\n  onEdit,\n  onComplete\n}) {\n  _s();\n  const [editButtonTexts, setEditButtonTexts] = useState(Array(tasks.length).fill('Edit'));\n  const [editButtonCounters, setEditButtonCounters] = useState(Array(tasks.length).fill(0));\n  const handleEdit = (index, newText) => {\n    onEdit(index, newText);\n  };\n  const handleEditButtonClick = index => {\n    const newEditButtonTexts = [...editButtonTexts];\n    const newEditButtonCounters = [...editButtonCounters];\n    if (newEditButtonCounters[index] === 0) {\n      newEditButtonTexts[index] = '✓';\n      newEditButtonCounters[index] = 1;\n    } else {\n      newEditButtonTexts[index] = 'Edit';\n      newEditButtonCounters[index] = 0;\n    }\n    setEditButtonTexts(newEditButtonTexts);\n    setEditButtonCounters(newEditButtonCounters);\n    handleEdit(index, 'newEditedText');\n  };\n  const editableLabelRef = useRef(null);\n  useEffect(() => {\n    if (editableLabelRef.current) {\n      if (tasks.some(task => task.isEditing)) {\n        editableLabelRef.current.focus();\n        const range = document.createRange();\n        range.selectNodeContents(editableLabelRef.current);\n        range.collapse(false);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    }\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"taskList\",\n    children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: task.category,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.completed,\n        onChange: () => onComplete(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        ref: task.isEditing ? editableLabelRef : null,\n        className: `taskText ${task.isEditing ? 'editable' : ''} ${task.completed ? 'completed' : ''}`,\n        contentEditable: task.isEditing,\n        children: task.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: () => handleEditButtonClick(index),\n        children: editButtonTexts[index]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete-button\",\n        onClick: () => onDelete(index),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"xNgYVPEeWJBc9Qi26n8+9kCrRnM=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","TaskList","tasks","onDelete","onEdit","onComplete","_s","editButtonTexts","setEditButtonTexts","Array","length","fill","editButtonCounters","setEditButtonCounters","handleEdit","index","newText","handleEditButtonClick","newEditButtonTexts","newEditButtonCounters","editableLabelRef","current","some","task","isEditing","focus","range","document","createRange","selectNodeContents","collapse","selection","window","getSelection","removeAllRanges","addRange","className","children","map","category","type","checked","completed","onChange","fileName","_jsxFileName","lineNumber","columnNumber","ref","contentEditable","text","onClick","_c","$RefreshReg$"],"sources":["/Users/aikenmanasbekov/neobis_front_toDoListReact/neobis-front-todolist-react/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nfunction TaskList({ tasks, onDelete, onEdit, onComplete }) {\n  const [editButtonTexts, setEditButtonTexts] = useState(Array(tasks.length).fill('Edit'));\n  const [editButtonCounters, setEditButtonCounters] = useState(Array(tasks.length).fill(0));\n\n  const handleEdit = (index, newText) => {\n    onEdit(index, newText);\n  };\n\n  const handleEditButtonClick = (index) => {\n    const newEditButtonTexts = [...editButtonTexts];\n    const newEditButtonCounters = [...editButtonCounters];\n\n    if (newEditButtonCounters[index] === 0) {\n      newEditButtonTexts[index] = '✓';\n      newEditButtonCounters[index] = 1;\n    } else {\n      newEditButtonTexts[index] = 'Edit';\n      newEditButtonCounters[index] = 0;\n    }\n\n    setEditButtonTexts(newEditButtonTexts);\n    setEditButtonCounters(newEditButtonCounters);\n\n    handleEdit(index, 'newEditedText');\n  };\n\n  const editableLabelRef = useRef(null);\n\n  useEffect(() => {\n    if (editableLabelRef.current) {\n      if (tasks.some(task => task.isEditing)) {\n        editableLabelRef.current.focus();\n        const range = document.createRange();\n        range.selectNodeContents(editableLabelRef.current);\n        range.collapse(false);\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n      }\n    }\n  }, [tasks]);\n\n  return (\n    <ul className=\"taskList\">\n      {tasks.map((task, index) => (\n        <li key={index} className={task.category}>\n          <input\n            type=\"checkbox\"\n            checked={task.completed}\n            onChange={() => onComplete(index)}\n          />\n          <label\n            ref={task.isEditing ? editableLabelRef : null}\n            className={`taskText ${task.isEditing ? 'editable' : ''} ${task.completed ? 'completed' : ''}`}\n            contentEditable={task.isEditing}\n          >\n            {task.text}\n          </label>\n          <button className=\"edit-button\" onClick={() => handleEditButtonClick(index)}>\n            {editButtonTexts[index]}\n          </button>\n          <button className=\"delete-button\" onClick={() => onDelete(index)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default TaskList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}